buildscript {
	ext{
		springBootVersion = '1.3.2.RELEASE'
	}
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven'
apply plugin: 'war'

group = 'com.app.rms'
version = '1.0.1'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
war.archiveName "rms.war"
archivesBaseName="rms"
war {
    baseName = 'RMS'
    version =  '0.1.0'
}

bootRepackage {
	mainClass = 'com.app.rms.Application'
}

repositories {
	mavenLocal()
    mavenCentral()
}

configurations.all{
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

processResources{
	filesMatching("**/application.properties"){
		expand version: version
	}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    compile group: 'postgresql', name: 'postgresql', version: '9.1-901-1.jdbc4'
    compile("org.slf4j:slf4j-api:1.6.6")
    compile("ch.qos.logback:logback-classic:1.0.13")
    compile("org.aspectj:aspectjweaver:1.8.8")
    
    //compile("mysql:mysql-connector-java:5.1.38")
    //runtime("mysql:mysql-connector-java:5.1.6")
    testCompile("junit:junit")
}

eclipse{
	classpath{
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
